这节课其实是2023版最新的js课程讲完后补录的视频
经过几年的积累，发现好多大佬们对于js的学习思路还是有问题，所以我这边录制一节学习方法和知识拓展课
此课程适合基础课学员和高阶课学员，或者买了高阶但是基础不好的学员

本节课内含大量的个人价值观输出，若观念与本人不符或感觉不适，请立即退出，每个人的学习方法都是好的方法。我仅仅是代表我的个人观点。

一、

   技术只是工具，所有的技术一定是为了业务服务。

    纯算 > 调用js > 补环境 > 驱动浏览器

    js逆向的目的/为什么非要用js逆向，自动化，rpc，rpa，指纹浏览器不是一样可以采集数据？
        它就是为了让协议采集的速度更快而做的。
        非协议爬虫的速度实际上是非常缓慢的，资源消耗大且对代理质量要求非常高
        js逆向就是为了怼 非侵入式 爬虫无满足的条件而生成的。
        工作上，只要能出数，什么方案都可以，但是学习，它必须学。

        虽然，非侵入式爬虫是未来的趋势，但，绝不是现在
        很多场景，甚至调用js纯算速度都无法满足，要把js代码改成纯算才勉强符合目的

二、
    js逆向基础如何学习

    学，一定要注意学习方法
    有很多同学对我讲，看了我的三遍，五遍基础课，还是不对劲，找不到感觉，那就是学习方法错了

    在基础课的时候，一定要追求三个字，求甚解
    一定要"精看"，务必追求将其复现，务必听懂每一个知识点，记笔记，不断重复加深自己的印象。

    基础课学习，最忌讳的事情，就是不懂装懂，感觉自己好像听明白了，自己复现不出来，写不出来，作业答不出来
    一看答案，一拍大腿，卧槽，原来是这样，我会了！我就是马虎大意的，我就是没想到，其实我是知道的！
    这个心态是极其极其极其错误的，因为基础阶段是对js这门语言理解的提升上限部分，必须要达到我 100%的知识储备同步，后面才会顺利
    必须要达到，遇到一段简单的js代码，就知道它在做什么，它有什么用，它内含的机理是什么。

    也就是，"精看"，如果只是跟大学阶段一样，听了就是听了，最后的结果就是，好像付出了很大的时间和努力，最后收获不如预期
    "精看"一遍，胜过粗看百遍。

    基础课同学，这节课看到这里就行了。赶紧去学基础吧。下面的内容，基础课真的懂了，再往下看。

三、
    高阶课如何学习

    在高阶课的时候，情况就是非常复杂，不能以基础课的那种模式去学习，就要转换思路了。
    学习时，求甚解
    逆向/实战时，不求甚解

    学习课程的时候还是一样，要课程的每个知识点都清楚，课程内容都可以自己独立复现，但凡有一句话听不懂，就要停，不要带着疑问继续学
    但是，但是，但是！
        逆向/实战时，
        千万千万不要钻牛角尖。

        逆向不比基础，很大知识是经验的积累而不是"定理和公式"，它不是就是这样的，而是有个人经验和实战局限性的。
        基础课，1+1，就是等于2
        但是，逆向课，2可以拆解为：1+1，0+2，甚至 0.5+1.5。它是没有唯一解的

    我们举个例子，
        一个参数加密，有多种途径可以获得

            hook，猜测逆推，硬跟值，补环境，内存漫游，甚至社工等等方案
        那么如何，在最快速的时候，选取一个合适的方案去推进，是非常考验一个人的思维灵活性的。
        而这种【灵活性】，与基础课学习的【求甚解】是有一定思想碰撞的。

        如果非要弄懂，我要逆向的目标代码究竟每一行在做什么，每一件事在搞什么，每一个业务逻辑代码在绑定什么业务事件，那就一定会把自己逼疯
        而课程上，我为什么要采取这些方式处理问题，其他的方式是否可以，哪个方式最快，哪个方式更适合自己，本身就是一个非常主观的东西。

        这就是为什么高阶课我很难去接手别人的逆向项目，只回答课程相关问题的原因之一。因为每个人的思想是不同的，逆向思路相差非常大。
        另外一个原因，我们一会儿讲

        综合一下：逆向课，一定要达到一个
            求甚解 ～ 不求甚解 这样的一个平衡状态。如果能摸到这个平衡状态，那恭喜你，真的入门了，并且有成为大佬的潜力。
            大佬们有一天，一定会达到这个状态，达到状态那一刻，就知道我说的是什么了。

四、js逆向的状况和要求
    课程上的js逆向，时长基本都是在 半天（6个小时）之内，即：从0开始，处理的项目，大多数都是在几个小时之内完成的。但是实战中不是
    在实战中，很多难处理的东西，都是需要以天/周/月 为单位来计算的
    这也就是我为什么一直强调要玩圈子的原因，逆向做到一定程度，一定会涉及资源交换的问题，因为人不可能有精力同时维护多个项目。

    所以，js逆向要求的素质：
        1. 耐心：可以抵抗自己几天，甚至几周没有进展或者产出
        2. 信心：相信自己在往前走一步，就会有收获
        3. 决心: 决定走了这条路，就不要回头，发现自己不合适，就不要再往前走
        4. 社交能力：猿人学 圈子

    每一个js逆向的大佬：一定会经历过（天才除外）：
        废寝忘食，熬大夜的过程。实力真的是硬熬出来的。